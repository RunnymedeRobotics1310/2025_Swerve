import org.gradle.internal.os.OperatingSystem

pluginManagement {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        String frcYear = '2025'
        File frcHome
        if (OperatingSystem.current().isWindows()) {
            String publicFolder = System.getenv('PUBLIC')
            if (publicFolder == null) {
                publicFolder = "C:\\Users\\Public"
            }
            def homeRoot = new File(publicFolder, "wpilib")
            frcHome = new File(homeRoot, frcYear)
        } else {
            def userFolder = System.getProperty("user.home")
            def homeRoot = new File(userFolder, "wpilib")
            frcHome = new File(homeRoot, frcYear)
        }
        def frcHomeMaven = new File(frcHome, 'maven')
        maven {
            name 'frcHome'
            url frcHomeMaven
        }
    }
}

exec {
    File swerveLibDir = new File( "../../RunnymedeSwerve")
    println "Checking for RunnymedeSwerve sources. Will build them if found. Expected directory '"+swerveLibDir.getPath()+"'."
    if (swerveLibDir.exists()) {
        workingDir swerveLibDir.getPath()
        commandLine './gradlew', 'clean', 'build','publishToMavenLocal','--console=plain'
        ignoreExitValue false
        println "RunnymedeSwerve built successfully and deployed to maven local. If the library version number matches the version in this project's build.gradle, the newly built library will be used."
     } else {
        commandLine "echo", "RunnymedeSwerve sources not found. Not building them. The library must be already built and accessible (either locally or to a public repository)."
    }
}


Properties props = System.getProperties();
props.setProperty("org.gradle.internal.native.headers.unresolved.dependencies.ignore", "true");
